<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reschedule Form</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Lora', serif;
        }

        body {
            height: 110vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 10px;
            background: url('/backgroundImg5.jpg') no-repeat center center fixed;
            background-size: cover;
            color: #333;
        }

        .container {
            width: 60%;
            max-width: 600px;
            background-color: rgba(236, 239, 241, 0.9);
            padding: 80px 80px;
            border-radius: 10px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            margin-top: 60px;
        }

        .container h1 {
            font-size: 28px;
            font-weight: bold;
            color: #005A9C;
            margin-bottom: 20px;
            text-align: center;
            position: relative;
        }

        .container h1::before {
            content: "";
            position: absolute;
            left: 50%;
            bottom: -5px;
            transform: translateX(-50%);
            height: 3px;
            width: 40px;
            background: linear-gradient(135deg, #005A9C, #0072B2, #ECEFF1);
            border-radius: 2px;
        }

        label {
            font-weight: bold;
            color: #005A9C;
        }

        .input-box {
            width: 100%;
            margin-bottom: 30px;
        }

        .input-box label {
            display: block;
            margin-bottom: 5px;
        }

        .input-box input,
        .input-box select,
        textarea {
            width: 100%;
            height: 55px;
            padding: 10px;
            font-size: 16px;
            border-radius: 5px;
            border: 1px solid #ccc;
            transition: all 0.3s ease;
        }

        input[type="date"] {
            width: 100%;
            height: 50px;
            font-size: 16px;
            padding: 10px;
            margin-bottom: 30px;
        }

        textarea {
            resize: vertical;
            margin-bottom: 30px;
        }

        .input-box input:focus,
        .input-box select:focus,
        textarea:focus {
            border-color: #005A9C;
            box-shadow: 0 0 5px rgba(0, 90, 156, 0.3);
        }

        .button-container {
            display: flex;
            justify-content: center;
        }

        button {
            width: 100%;
            height: 55px;
            background: linear-gradient(135deg, #005A9C, #0072B2);
            color: #fff;
            border: none;
            border-radius: 5px;
            font-size: 18px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        button:hover {
            background: linear-gradient(-135deg, #0072B2, #005A9C);
            box-shadow: 0 4px 10px rgba(0, 90, 156, 0.2);
        }

        @media(max-width: 584px) {
            .container {
                width: 100%;
                padding: 30px;
            }

            .input-box {
                width: 100%;
            }
        }

        form {
            margin-top: 20px;
            margin-bottom: 20px;
        }

        /* Countdown timer style */
        .countdown-timer {
            font-size: 20px;
            font-weight: bold;
            color: red;
            text-align: center;
            margin-top: 20px;
        }
    </style>
</head>

<body>
    <%- include('navbar', { employeeID: employeeID }) %>
    <div class="container">
        <h1>Reschedule Appointment</h1>
        <form action="/reschedule-appointment/<%= appointment.employee_id %>" method="POST">
            <label for="date">Date:</label>
            <input type="date" id="date" name="date" value="<%= appointment.date.toISOString().split('T')[0] %>" required>
        
            <div class="input-box">
                <label for="time">Preferred Appointment Time:</label>
                <select id="time" name="time" required>
                    <option value="" disabled selected>Select a time</option>
                    <option value="<%= appointment.time %>" selected><%= appointment.time %></option>
                </select>
            </div>
        
            <label for="reason">Reason for Visit:</label>
            <textarea id="reason" name="reason" rows="4" required><%= appointment.reason %></textarea>
        
            <label for="specialRequests">Special Requests:</label>
            <textarea id="specialRequests" name="specialRequests" rows="4"><%= appointment.specialRequests || '' %></textarea>
        
            <button type="submit">Reschedule Appointment</button>
        </form>

        <!-- Countdown timer display -->
        <div id="countdown" class="countdown-timer">
            Time remaining: <span id="timeRemaining">00:30</span>
        </div>
    </div>
    <script>
        const selectElement = document.getElementById('time');
        const dateInput = document.getElementById('date');
        const countdownElement = document.getElementById("timeRemaining");
    
        // Variable to store the countdown interval
        let countdownInterval;
    
        // Function to populate the select options with time slots
        function populateTimeSlots(date) {
            const startHour = 9; // 9 AM
            const endHour = 18; // 6 PM
            const interval = 10; // 10 minutes
    
            // Clear previous time options
            selectElement.innerHTML = '<option value="" disabled selected>Select a time</option>';
    
            const now = new Date();
            const selectedDate = new Date(date);
            const isToday = selectedDate.toDateString() === now.toDateString();
    
            // Check if the selected date is today and block past times
            for (let hour = startHour; hour <= endHour; hour++) {
                for (let minute = 0; minute < 60; minute += interval) {
                    // Special handling for 6 PM to only show 6:00 PM
                    if (hour === endHour && minute > 0) {
                        break;
                    }
    
                    const time = new Date();
                    time.setHours(hour);
                    time.setMinutes(minute);
    
                    // Block past times if it's today
                    if (isToday && time < now) {
                        continue;
                    }
    
                    const formattedTime = time.toTimeString().slice(0, 5); // Format as HH:MM
    
                    // Create option element
                    const option = document.createElement('option');
                    option.value = formattedTime;
                    option.textContent = formattedTime;
    
                    selectElement.appendChild(option);
                }
            }
        }
    
        // Set minimum date to today for date input
        const today = new Date().toISOString().split('T')[0];
        dateInput.min = today;
    
        // Event listener for date change
        dateInput.addEventListener('change', function () {
            populateTimeSlots(dateInput.value);
        });
    
        // Event listener for time selection change
        selectElement.addEventListener('change', function () {
            if (selectElement.value) {
                startCountdown(); // Start countdown when time is selected
            } else {
                resetCountdown(); // Reset countdown if time is cleared
            }
        });


// Populate times for the initial date (today)
        populateTimeSlots(today);
    
        // Countdown timer logic
        let timeLeft = 30; // 30 seconds countdown as an example
    
        function startCountdown() {
            // Reset time and start countdown
            timeLeft = 30; // Reset countdown to 30 seconds
            countdownInterval = setInterval(function () {
                const minutes = Math.floor(timeLeft / 60);  // Get the number of minutes
                const seconds = timeLeft % 60;  // Get the number of seconds
    
                // Format time as MM:SS (always show two digits for minutes and seconds)
                countdownElement.textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;
    
                // Decrease the time left by 1 second
                timeLeft--;
    
                // If time runs out, clear interval and redirect
                if (timeLeft < 0) {
                    clearInterval(countdownInterval);
                    window.location.href = "/check-employee-profile/<%= appointment.employee_id %>"; // Redirect to the employee details page
                }
            }, 1000); // Update every second
        }
    
        function resetCountdown() {
            // Reset the countdown timer when time is cleared
            clearInterval(countdownInterval);
            countdownElement.textContent = "Time remaining: 00:30"; // Reset countdown display
        }
    </script>
</body>

</html>