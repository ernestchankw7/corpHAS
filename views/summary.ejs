<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Summary</title>
    <style>
        body {
            background-color: #aad9d8;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }

        .summary-container {
            max-width: 600px;
            margin: 0 auto;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .summary-title {
            font-size: 1.5em;
            margin-bottom: 20px;
            text-align: center;
        }

        .item-row {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid #ddd;
        }

        .total-row {
            margin-top: 20px;
            font-size: 1.2em;
            font-weight: bold;
        }

        .button {
            margin-top: 20px;
            display: block;
            text-align: center;
            padding: 10px 20px;
            background-color: #0072B2;
            color: white;
            text-decoration: none;
            border-radius: 4px;
            cursor: pointer;
            margin-bottom: 50px;
        }

        .hidden {
            display: none;
        }

        #paypal-container-X3HPGWDCVPBK2 {
            margin-top: 30px;
            text-align: center;
        }
    </style>
</head>

<body>
    <div class="summary-container">
        <h1 class="summary-title">Order Summary</h1>
        <p><strong>Name:</strong> <%= employee.name %></p>
        <p><strong>Employee ID:</strong> <%= employee.employee_id %></p>
        <p><strong>Email:</strong> <%= employee.email %></p>
        <p><strong>Phone:</strong> <%= employee.phone %></p>
        <p><strong>Company:</strong> <%= employee.company %></p>
        <p><strong>Package:</strong> <%= employee.package %></p>

        <div id="cart-summary"></div>

        <a href="/add-ons/<%= employee.employee_id %>" class="button">Back</a>
        <button id="confirm-button" class="button hidden" style="width: 100%; border: none; height: 42px;">Confirm and Proceed</button>
        <div id="paypal-button-container" class="hidden"></div>
    </div>

    <script src="https://www.paypal.com/sdk/js?client-id=AQ3UjkyxHHlfjOdVDILyH7lJwauWKNgfaUaTTmZnnZt2dgDAJoSP28d8Y76YyOIzCbiJ62M_ITC8a1X3&currency=SGD&disable-funding=venmo"></script>

    <script>
        const cartSummary = JSON.parse(localStorage.getItem("cartSummary"));
        const summaryContainer = document.getElementById("cart-summary");
        const confirmButton = document.getElementById("confirm-button");
        const paypalContainer = document.getElementById("paypal-button-container");

        if (cartSummary && cartSummary.items && cartSummary.items.length > 0) {
            cartSummary.items.forEach((item) => {
                const itemRow = document.createElement("div");
                itemRow.className = "item-row";
                itemRow.innerHTML = `<span>${item.title}</span><span>$${item.price.toFixed(2)}</span>`;
                summaryContainer.appendChild(itemRow);
            });

            const totalRow = document.createElement("div");
            totalRow.className = "total-row";
            totalRow.innerHTML = `<strong>Total:</strong> $${cartSummary.totalPrice.toFixed(2)}`;
            summaryContainer.appendChild(totalRow);

            if (cartSummary.totalPrice === 0) {
                // Show the "Confirm and Proceed" button for Basic Test Package only
                confirmButton.classList.remove("hidden");
            } else {
                // Show PayPal button for items with additional costs
                paypalContainer.classList.remove("hidden");
                paypal.Buttons({
                    createOrder: function (data, actions) {
                        return actions.order.create({
                            purchase_units: [{ amount: { value: cartSummary.totalPrice.toFixed(2) } }]
                        });
                    },
                    onApprove: function (data, actions) {
                        return actions.order.capture().then(function (details) {
                            handlePaymentSuccess(details, cartSummary);
                        });
                    }
                }).render("#paypal-button-container");
            }
        } else {
            summaryContainer.innerHTML = "<p>No items in the cart.</p>";
        }

        confirmButton.addEventListener("click", () => {
            const employeeID = '<%= employee.employee_id %>';
            fetch(`/test-items/save/${employeeID}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ details: {}, cartSummary })
            })
            .then((response) => {
                if (response.ok) {
                    alert("Basic Test Package saved successfully!");
                    localStorage.removeItem("cart");
                    window.location.href = `/add-ons/${employeeID}`;
                } else {
                    alert("Error saving Basic Test Package.");
                }
            })
            .catch((error) => {
                console.error("Error:", error);
                alert("An error occurred while saving the package.");
            });
        });

        function handlePaymentSuccess(details, cartSummary) {
            const employeeID = '<%= employee.employee_id %>';
            fetch(`/test-items/save/${employeeID}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ details, cartSummary })
            })
            .then(() => {
                localStorage.removeItem("cart");
                window.location.href = `/add-ons/${employeeID}`;
            });
        }
    </script>
</body>
</html>
